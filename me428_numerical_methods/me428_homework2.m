%Alan Tieng
%ME428 Numerical Methods
%Homework 2


%% 4.5
% The pressure p of a gas is given by the expression log p = 21.6–2420/T,
% where T is the temperature in kelvins. Using the exact value of p from
% this expression, at T = 400 K, and the Taylor-series expansion for
% p(T), compute the pressures at 410, 420, and 450 K. Compare these
% values with the exact ones obtained from the given expression. Refer
% to Example 4.1b.

clear all;
close all;
clc;

% T_first = 350;
% A = exp(19.2);
% B = -5301.4;
% Temp = [351 352 355 360 370];

T_first = 400;
A = exp(21.6);
B = -2420;
Temp = [410 420 450];

syms T
f = exp(B/T);

for i = 1:length(Temp)
    s_sum = 0;
    disp("T = " +num2str(Temp(i)))
    for j = 0:4
        s_sum = s_sum + (Temp(i)-T_first)^j/factorial(j)*diff(f,j)*A;
        disp("N = " +num2str(j+1) + ", P = " + num2str(double(subs(s_sum,T,T_first))));
    end
    disp("Exact = " + num2str(A*double(subs(f,T,Temp(i)))));
end

%% 4.12
% The measured temperature distribution in a solar energy heating system
% may be represented by the equation
% 
%     T(x) = 15.5 + 16.8(1 - exp(-x/2.7)/(1+x)^2)
% 
% where x is the distance away from the surface being heated and T is the
% temperature. Compute the temperature gradient dT/dx and the second
% derivative d2T/dx2 at x = 0. The heat transfer rate is proportional to
% the temperature gradient at x = 0. The second derivative is related to
% energy lost or gained by radiative transport. Employ forward differences
% to O[(Δx)2] and reduce Δx to obtain numerical results that are largely
% independent of the value of Δx chosen.

clear all;
close all;
clc;

%Apply forward difference for first derivative

dx = 0.1;
x_initial = 0;
syms x;
T = 15.5 + 68.2*(1 - exp(-x/2.7)/(1+x)^2);
% dTdx = (double(subs(f,x,x_initial+dx))-double(subs(f,x,x_initial)))/dx;

a = 15.5 + 68.2*(1 - exp(-(x_initial+dx*2)/2.7)/(1+(x_initial+dx*2)^2));
b = 15.5 + 68.2*(1 - exp(-(x_initial+dx)/2.7)/(1+(x_initial+dx)^2));
c = 15.5 + 68.2*(1 - exp(-(x_initial)/2.7)/(1+(x_initial)^2));

d1dx = (-a+4*b-3*c)/(2*dx);

disp("For dx = " + num2str(dx) + ", dT/dx = " + num2str(d1dx));

a = 15.5 + 68.2*(1 - exp(-(x_initial+dx*3)/2.7)/(1+(x_initial+dx*3)^2));
b = 15.5 + 68.2*(1 - exp(-(x_initial+dx*2)/2.7)/(1+(x_initial+dx*2)^2));
c = 15.5 + 68.2*(1 - exp(-(x_initial+dx)/2.7)/(1+(x_initial+dx)^2));
d = 15.5 + 68.2*(1 - exp(-(x_initial)/2.7)/(1+(x_initial)^2));

d2dx = (-a+4*b-5*c+2*d)/(dx^2);

disp("For dx = " + num2str(dx) + ", d^2T/dx^2 = " + num2str(d2dx));

%% 4.15
% In fluid mechanics, the stream function ψ, which is related to the flow
% rate, is frequently employed for analysis. The distribution of ψ for a
% particular problem is obtained as
% 
%   ψ = 1.1(exp(-y^1.3))*cos(y^2/(3*pi)) + 0.9(exp(-y^0.7))*sin(y^2/(2*pi)) 
% 
% The velocity V is given by dψ/dy, and the shear force generated by
% the flow is proportional to d2ψ/dy2. Compute both these derivatives
% at y = 0.5, with Δy = 0.2, 0.1, and 0.05. Employ second-order central
% differences.

clear all;
close all;
clc;

dy = [0.2 0.1 0.05];
y = 0.5;
for i = 1:length(dy)
    a = 1.1*(exp(-(y+dy(i))^1.3))*cos((y+dy(i))^2/(3*pi)) + 0.9*(exp(-(y+dy(i))^0.7))*sin((y+dy(i))^2/(3*pi));
    b = 1.1*(exp(-(y-dy(i))^1.3))*cos((y-dy(i))^2/(3*pi)) + 0.9*(exp(-(y-dy(i))^0.7))*sin((y-dy(i))^2/(3*pi));

    d1dy = (a-b)/(2*dy(i));
    disp("For dy = " + num2str(dy(i)))
    disp("dT/dy = " + num2str(d1dy));

    a = 1.1*(exp(-(y+dy(i))^1.3))*cos((y+dy(i))^2/(3*pi)) + 0.9*(exp(-(y+dy(i))^0.7))*sin((y+dy(i))^2/(3*pi));
    b = 1.1*(exp(-(y-dy(i))^1.3))*cos((y-dy(i))^2/(3*pi)) + 0.9*(exp(-(y-dy(i))^0.7))*sin((y-dy(i))^2/(3*pi));
    c = 1.1*(exp(-y^1.3))*cos(y^2/(3*pi)) + 0.9*(exp(-y^0.7))*sin(y^2/(3*pi));

    d2dy = (a-2*c+b)/(dy(i)^2);
    disp("d^2T/dy^2 = " + num2str(d2dy));
    disp(" ");
end

%% 4.17
% The hot-wire anemometer is an instrument used for measuring velocities or
% temperatures. If, during its calibration, the output signal E is measured
% as 0, 1.7, 3.3, and 5.6 V at velocities V of 0, 1, 1.5, and 2 m/s, obtain
% the gradient dE/dV at V = 0 m/s, using the polynomial representation of
% the function E(V).

clear all;
close all;
clc;

v_initial = 0;
dv = 0.5;

a = (v_initial + 2* dv) + 0.5 * (v_initial + 2* dv)^2 + 0.2 * (v_initial + 2* dv)^3;
b = (v_initial + dv) + 0.5 * (v_initial + dv)^2 + 0.2 * (v_initial + dv)^3;
c = (v_initial) + 0.5 * (v_initial)^2 + 0.2 * (v_initial)^3;

dedv = (-a+4*b-3*c)/(2*dv);

disp("For dv = " + num2str(dv))
disp("dE/dV = " + num2str(dedv));

